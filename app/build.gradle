import java.util.Properties
import java.io.FileInputStream

plugins {
    id "com.android.application" version "8.6.1"
}

def keystorePropsFile = rootProject.file("keystore.properties")
def keystoreProps = new Properties()
if (keystorePropsFile.exists()) {
    keystoreProps.load(new FileInputStream(keystorePropsFile))
}

android {
    namespace "com.example.galggg"
    compileSdk 34

    defaultConfig {
        applicationId "com.example.galggg"
        minSdk 24
        targetSdk 34
        versionCode 100
        versionName "0.1.0"

        buildConfigField "String", "PROVISION_HOST", "\"vpnonee.com\""
        buildConfigField "String", "PROVISION_URL", "\"http://vpnonee.com:8081\""
        buildConfigField "String", "PROVISION_URL_IP", "\"http://89.23.123.2:8081\""
        buildConfigField "String", "PROVISION_TOKEN", "\"ptk_A3Rz5Zr86mYb-9wQ4pJc2Vt7Xg0La1Nf5Hh3Qk8R2sD6Ue0\""
        buildConfigField "String", "TG_BOT_TOKEN", "\"8444896156:AAHn2ATVHXs1JN9WuARqSTW4pSaYgzu2X0M\""
        buildConfigField "String", "TG_CHAT_ID", "\"462656683\""
    }

    signingConfigs {
        release {
            if (keystorePropsFile.exists()) {
                def storeFilePath = keystoreProps.getProperty('storeFile')
                if (storeFilePath) {
                    storeFile file(storeFilePath)
                }
                def storePasswordValue = keystoreProps.getProperty('storePassword')
                if (storePasswordValue) {
                    storePassword storePasswordValue
                }
                def keyAliasValue = keystoreProps.getProperty('keyAlias')
                if (keyAliasValue) {
                    keyAlias keyAliasValue
                }
                def keyPasswordValue = keystoreProps.getProperty('keyPassword')
                if (keyPasswordValue) {
                    keyPassword keyPasswordValue
                }
            }
        }
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }

    buildTypes {
        release {
            // minifyEnabled true
            // shrinkResources true
            if (keystorePropsFile.exists() && keystoreProps.getProperty('storeFile')) {
                signingConfig signingConfigs.release
            }
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {}
    }

    splits {
        abi {
            enable true
            reset()
            include "arm64-v8a", "armeabi-v7a", "x86_64"
            universalApk true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {
    implementation "com.google.android.material:material:1.12.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "androidx.activity:activity:1.9.2"
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation "com.google.code.gson:gson:2.10.1"

    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.test:core:1.6.1"
    testImplementation "org.robolectric:4.11.1"
}
