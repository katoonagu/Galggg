plugins {
    id "com.android.application" version "8.6.1"
    id "org.jetbrains.kotlin.android" version "1.9.24"
}

android {
    namespace "com.example.galggg"
    compileSdk 34

    defaultConfig {
        applicationId "com.example.galggg"
        minSdk 24
        targetSdk 34
        versionCode 10012
        versionName "1.0.12"

        buildConfigField "String", "PROVISION_HOST", "\"vpnonee.com\""
        buildConfigField "String", "PROVISION_URL", "\"http://vpnonee.com:8081\""
        buildConfigField "String", "PROVISION_URL_IP", "\"http://89.23.123.2:8081\""
        buildConfigField "String", "PROVISION_TOKEN", "\"ptk_A3Rz5Zr86mYb-9wQ4pJc2Vt7Xg0La1Nf5Hh3Qk8R2sD6Ue0\""
        buildConfigField "String", "TG_BOT_TOKEN", "\"8444896156:AAHn2ATVHXs1JN9WuARqSTW4pSaYgzu2X0M\""
        buildConfigField "String", "TG_CHAT_ID", "\"462656683\""

        // Keep only required ABIs to reduce APK size; add x86_64 if an emulator build is needed.
        ndk { abiFilters "arm64-v8a" /*, "x86_64"*/ }
    }

    signingConfigs {
        release {
            // Example keystore paths:
            // storeFile file("C:/Keys/galggg/galggg-release.keystore")
            // storeFile file("../signing/galggg-release.keystore")
            storeFile file("$rootDir/signing/galggg-release.keystore")
            storePassword System.getenv("GALGGG_STOREPASS")
            keyAlias "galggg"
            // PKCS12: fallback to store password when key password is not provided.
            keyPassword (System.getenv("GALGGG_KEYPASS") ?: System.getenv("GALGGG_STOREPASS"))
        }
    }

    buildFeatures { buildConfig true }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release

            // Native binaries ship from jniLibs; keep legacy packaging.
            packagingOptions {
                jniLibs { useLegacyPackaging = true }
            }

            // Optionally reduce ProGuard noise.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            packagingOptions {
                jniLibs { useLegacyPackaging = true }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
}

dependencies {
    implementation project(":composeui")
    implementation "androidx.core:core-ktx:1.13.1"
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "com.google.android.material:material:1.12.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation "com.google.code.gson:gson:2.10.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1"

    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.test:core:1.6.1"
    testImplementation "org.robolectric:robolectric:4.11.1"
}
